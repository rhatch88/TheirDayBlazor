@page "/add-event" 
@using TheirDayBlazor.Models
@inject NavigationManager Navigation
@inject TheirDayBlazor.Data.AppDbContext DbContext

<h2>Add a New Event</h2>

@if (isSaved)
{
    <div class="alert alert-success">
        Event added successfully! <a href="/event-list">View Events</a>
    </div>
}

<form @onsubmit="SaveEvent">
    <div class="form-group">
        <label>Name</label>
        <input @bind="newEvent.Name" class="form-control" required />
    </div>

    <div class="form-group">
        <label>Age Group</label>
        <input @bind="newEvent.AgeGroup" class="form-control" required />
    </div>

    <div class="form-group">
        <label>Price</label>
        <input @bind="newEvent.Price" type="number" step="0.01" class="form-control" required />
    </div>

    <div class="form-group">
        <label>Location</label>
        <input @bind="newEvent.Location" class="form-control" required />
    </div>

    <div class="form-group">
        <label>Outdoor Event?</label>
        <input @bind="newEvent.IsOutdoor" type="checkbox" />
    </div>

    <button type="submit" class="btn btn-primary">Save Event</button>
    <a href="/event-list" class="btn btn-secondary">Cancel</a>
</form>

@code {
    private TheirDayBlazor.Models.Event newEvent = new TheirDayBlazor.Models.Event();
    private bool isSaved = false;

    private async Task SaveEvent()
    {
        DbContext.Events.Add(newEvent);
        await DbContext.SaveChangesAsync();
        isSaved = true;
        newEvent = new TheirDayBlazor.Models.Event(); // Reset form
    }
}


