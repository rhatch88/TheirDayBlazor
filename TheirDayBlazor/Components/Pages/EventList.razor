@page "/event-list"
@using TheirDayBlazor.Models
@inject NavigationManager Navigation
@inject TheirDayBlazor.Data.AppDbContext DbContext
@using Microsoft.EntityFrameworkCore

<h1>Saved Events</h1>

@if (events == null)
{
    <p>Loading events...</p>
}
else if (!events.Any())
{
    <p>No events found. Try adding one!</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Age Group</th>
                <th>Price</th>
                <th>Location</th>
                <th>Outdoor?</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var eventItem in events)
            {
                <tr>
                    <td>@eventItem.Name</td>
                    <td>@eventItem.AgeGroup</td>
                    <td>@eventItem.Price.ToString("C")</td>
                    <td>@eventItem.Location</td>
                    <td>@(eventItem.IsOutdoor ? "Yes" : "No")</td> 
                    <td>
                        <button class="btn btn-warning btn-sm" @onclick="() => EditEvent(eventItem.Id)">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteEvent(eventItem.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<TheirDayBlazor.Models.Event> events = new();

    protected override async Task OnInitializedAsync()
    {
        events = await DbContext.Events.ToListAsync();
    }

    private void EditEvent(int id)
    {
        Navigation.NavigateTo($"/edit-event/{id}");
    }

    private async Task DeleteEvent(int id)
    {
        var eventItem = await DbContext.Events.FindAsync(id);
        if (eventItem != null)
        {
            DbContext.Events.Remove(eventItem);
            await DbContext.SaveChangesAsync();
            events.Remove(eventItem);
        }
    }
}
